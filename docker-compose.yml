version: "3.8"
services:
  postgres:
    image: postgres:latest
    ports:
      - "5060:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      - moodshopnet
    env_file: 
      - ./postgres/.env
    mem_limit: 100M
    cpus: "0.25"
  api:
    image: zakimaulana/apimoodshop:master
    ports:
      - "8089-8091:8089"
    env_file:
      - ./api/.env
    networks:
      - moodshopnet
    depends_on:
      - postgres
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        # reservations:
        #   cpus: '0.25'
        #   memory: 20M
    volumes:
      - ./shared-api:/shared-files
  redis:
    image: redis:5.0.10-alpine
    env_file: 
      - ./redis/.env
    ports:
      - "6969:6379"
    networks:
      - moodshopnet
    depends_on:
      - api
    restart: always
    mem_limit: 50M
    cpus: "0.50"
  frontend:
    image: zakimaulana/frontendmoodshop:master
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    # env_file:
    #   - ./frontend/.env.local
    volumes: 
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    networks:
      - moodshopnet
    depends_on: 
      - api
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    depends_on: 
      - frontend
networks:
  moodshopnet:
    driver: bridge
